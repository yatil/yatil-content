Title: Bewegung!
----
Date: 2008-10-28
----
Category: Allgemein
----
Summary: 
----
Tags: 
----
Image: 
----
Text:
In letzter Zeit konnte man an vielen Stellen im Web von Stagnation lesen, von den unglaublichen Bürden, die Webstandards und vor allem die Entwicklung neuer Versionen davon bedeuten und das ja sowieso alles schlecht ist, was gerade passiert. Dabei scheint jeder einzelne Vorschlag grundsätzlich erstmal auf Ablehnung zu stoßen, egal in welche Richtung er geht. Beispiel HTML5: Warum braucht man dafür so lange, was soll das alles überhaupt und warum ist genau das, was ich jetzt gerade brauche nicht implementiert? Beispiel IE6: Natürlich muss ich ihn voll unterstützen, _die Benutzer kommen mit einer abgespeckten Version nicht zurecht_, der kann ja kein <beliebiges HTML/CSS-Feature einsetzen>, der Kunde will es aber doch so! Es reicht. Es macht keinen Spaß Standardista zu sein (und als Mitglied der HTML WG und BAD TF darf ich mich sicherlich als solcher bezeichnen), wenn jede neue Idee, jede fortschrittliche Technik rundweg todgeredet wird. Wenn jeder kleinste Fortschritt gleich mit üblen Kommentaren erstickt wird. Niemand zahlt explizit für CSS-Layouts, wir tun es trotzdem, weil es unser Ethos ist. Weil wir denken das richtige zu tun. Deshalb achten wir zumindest auf Barrierearmut und setzen unobtrusive JavaScript ein. Wir _müssen_ das nicht. Aber es hat Vorteile für uns, weil wir uns Arbeit einsparen und für Kunden, weil sie weniger Aufwand bezahlen müssen. Das alles ist bei wirklich ernsthaften Webentwicklern selbstverständlich. Warum gibt es dann so wenig Konsens, wenn es darum geht moderne Webbrowser als Grundlage für die Webentwicklung zu benutzen? Warum sollten wir für abgerundete Ecken lange Zeiten berechnen, wenn wir mit zwei CSS3-Anweisungen uns nicht nur die Arbeit einfacher machen und die Wartung von Webseiten erleichtern können? Beispiel: Man entscheidet mit dem Kunden zusammen die Rahmenfarbe eines Kasten mit abgerundeten Ecken zu ändern. Natürlich kann man jetzt sich Ecken noch einmal in Photoshop zurechtschneiden (und diese Arbeit berechnen), aber einfach `border-color` abändern zu können ist ein unbestreitbarer Vorteil. Zugegeben, der IE kann das nicht und wird es auch in Version 8 nicht können. Aber ist das ein Beinbruch oder gehört das eher zu einem der [HTML-/CSS-Unterschiede, die mir egal sein können](http://forabeautifulweb.com/blog/about/five_css_design_browser_differences_i_can_live_with/)? Natürlich muss man auch hier abwägen, muss die Nutzerstruktur seines Kunden genau kennen. Aber das gehört zum Beruf. Ich lade euch ein, zum Experimentieren, auch mal neue Lösungen auszuprobieren und neue Webstandards zu benutzen. Das erhöht den Druck auf die Browserhersteller, ihre Sache auch richtig zu machen, Dinge wie `RGBa` auch zu Implementieren. Das hat ja sogar mit transparenten PNGs geklappt, mit mit AJAX und mit Mikroformaten, die bereits vom Firefox und dem IE8 unterstützt werden. Natürlich müssen Seiten für den IE6 auch _zugänglich_ sein, aber schon lange nicht mehr perfekt. Auch das gehört zum guten Handwerk. Und das Webseiten, die direkten kommerziellen Interessen unterliegen, also E-Commerce, anderen Gesetzmäßigkeiten unterliegen ist auch wahr. Aber dort verdient man ja mit den hinzugewonnen Kunden dann das Geld, das man für die IE6-Optimierung wieder ausgibt (und hoffentlich ein bisschen mehr). Wer allerdings sagt, dass mit dem Wegfall der Unterstützung für den IE6 weniger verdient, weil er ja dem Kunden weniger Aufwand in Rechnung stellen kann, der muss sich ernsthaft fragen lassen, ob er seine Kunden gut genug beraten hat. Es ist nämlich letztlich Betrug am Kunden, wenn man ihn nicht über die Nebenwirkungen (in Form von Mehrkosten) für sein Webprojekt aufklärt. [![](http://wp.yatil.net/wp-content/uploads/2008/10/305.jpg)](http://wp.yatil.net/wp-content/uploads/2008/10/305.jpg)Wir brauchen einfach mehr Bewegung im gesamten Browser-/ Webstandards-/ Webdesigner-/ Entwickler-/ Kunden-Gefüge. Die Webstandards sind gerade gehörig in Bewegung, die Browserhersteller ziehen mit, legen teilweise sogar vor, wie es mit dem Canvas-Element passiert ist. Das ist gut. Aber wir als Entwickler sind gefragt bei dieser Entwicklung mit zu ziehen bevor sie einschläft und wir uns weitere Jahre mit der selben Konstellation herumschlagen, die wir schon seit Jahren beklagen. Wir müssen diesen Schritt jetzt gehen und über die Tellerränder hinaus schauen, sonst haben wir diese Chance vielleicht endgültig vertan.